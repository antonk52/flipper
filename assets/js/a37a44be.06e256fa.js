"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6190,6033],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>u,MDXProvider:()=>d,mdx:()=>f,useMDXComponents:()=>c,withMDXComponents:()=>s});var i=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},r.apply(this,arguments)}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=i.createContext({}),s=function(e){return function(t){var n=c(t.components);return i.createElement(e,r({},t,{components:n}))}},c=function(e){var t=i.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return i.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,a=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),s=c(n),d=o,h=s["".concat(a,".").concat(d)]||s[d]||m[d]||r;return n?i.createElement(h,l(l({ref:t},u),{},{components:n})):i.createElement(h,l({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=h;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<r;u++)a[u]=n[u];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},31879:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>u,contentTitle:()=>s,metadata:()=>c,toc:()=>d,default:()=>h});var i=n(83117),o=n(80102),r=(n(67294),n(3905)),a=n(55064),l=n(58215),p=["components"],u={},s=void 0,c={type:"mdx",permalink:"/flipper/docs/plugins/inspector/setup",source:"@site/src/embedded-pages/docs/plugins/inspector/setup.mdx"},d=[{value:"Android",id:"android",children:[{value:"Standard Android View Only",id:"standard-android-view-only",children:[],level:3},{value:"With Litho Support",id:"with-litho-support",children:[],level:3},{value:"Blocking fullscreen views (Android only)",id:"blocking-fullscreen-views-android-only",children:[],level:3},{value:"Blocking empty view groups (Android only)",id:"blocking-empty-view-groups-android-only",children:[],level:3}],level:2},{value:"iOS",id:"ios",children:[{value:"Standard UIView Only",id:"standard-uiview-only",children:[],level:3},{value:"With ComponentKit Support",id:"with-componentkit-support",children:[],level:3}],level:2}],m={toc:d};function h(e){var t=e.components,n=(0,o.Z)(e,p);return(0,r.mdx)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,"To use the layout inspector plugin, you need to add the plugin to your Flipper client instance."),(0,r.mdx)("h2",{id:"android"},"Android"),(0,r.mdx)("h3",{id:"standard-android-view-only"},"Standard Android View Only"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"import com.facebook.flipper.plugins.inspector.DescriptorMapping;\nimport com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin;\n\nfinal DescriptorMapping descriptorMapping = DescriptorMapping.withDefaults();\nclient.addPlugin(new InspectorFlipperPlugin(mApplicationContext, descriptorMapping));\n")),(0,r.mdx)("h3",{id:"with-litho-support"},"With Litho Support"),(0,r.mdx)("p",null,"Litho support is provided via an optional plugin."),(0,r.mdx)("p",null,"You also need to compile in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"litho-annotations")," package, as Flipper reflects\non them at runtime. So ensure to not just include them as ",(0,r.mdx)("inlineCode",{parentName:"p"},"compileOnly")," in your\ngradle configuration:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-groovy"},"dependencies {\n  debugImplementation 'com.facebook.flipper:flipper-litho-plugin:0.119.0'\n  debugImplementation 'com.facebook.litho:litho-annotations:0.19.0'\n  // ...\n}\n")),(0,r.mdx)("p",null,"If you want to enable Litho support in the layout inspector, you need to augment\nthe descriptor with Litho-specific settings and add some addition dependencies."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"import com.facebook.litho.config.ComponentsConfiguration;\nimport com.facebook.flipper.plugins.inspector.DescriptorMapping;\nimport com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin;\nimport com.facebook.flipper.plugins.litho.LithoFlipperDescriptors;\n\n// Instead of hard-coding this setting, it's a good practice to tie\n// this to a BuildConfig flag, that you only enable for debug builds\n// of your application.\nComponentsConfiguration.isDebugModeEnabled = true;\n\nfinal DescriptorMapping descriptorMapping = DescriptorMapping.withDefaults();\n// This adds Litho capabilities to the layout inspector.\nLithoFlipperDescriptors.add(descriptorMapping);\n\nclient.addPlugin(new InspectorFlipperPlugin(mApplicationContext, descriptorMapping));\n")),(0,r.mdx)("h3",{id:"blocking-fullscreen-views-android-only"},"Blocking fullscreen views (Android only)"),(0,r.mdx)("p",null,"The issue is that if you have some view that occupies big part of the screen but draws nothing and its Z-position is higher than your main content, then selecting view/component through Layout Inspector doesn't work as you intended, as it will always hit that transparent view and you need to manually navigate to the view you need which is time-consuming and should not be necessary."),(0,r.mdx)("p",null,"Add the following tag to your view to skip it from Flipper's view picker. The view will still be shown in the layout hierarchy, but it will not be selected while using the view picker."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"view.setTag(R.id.flipper_skip_view_traversal, true);\n")),(0,r.mdx)("h3",{id:"blocking-empty-view-groups-android-only"},"Blocking empty view groups (Android only)"),(0,r.mdx)("p",null,"If you have a ViewGroup that only occasionally has visible children, you may find it helpful to block its traversal when it is empty or has no visible children. For example, you might have a FragmentContainerView that currently has no visible fragment."),(0,r.mdx)("p",null,"Add the following tag to your view group to skip it from Flipper's view picker only when it has zero children, or none of its children are currently visible. The views will still be shown in the layout hierarchy, but they will not be selected while using the view picker."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java"},"viewGroup.setTag(R.id.flipper_skip_empty_view_group_traversal, true);\n")),(0,r.mdx)("h2",{id:"ios"},"iOS"),(0,r.mdx)("h3",{id:"standard-uiview-only"},"Standard UIView Only"),(0,r.mdx)("p",null,"To debug layout using Flipper, add the following pod:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-ruby"},"pod 'FlipperKit/FlipperKitLayoutPlugin', '~>' + flipperkit_version\n")),(0,r.mdx)("p",null,"Once you have added the pod, initialise the plugin and add it to the ",(0,r.mdx)("inlineCode",{parentName:"p"},"FlipperClient")," as follows."),(0,r.mdx)(a.Z,{defaultValue:"ios",values:[{label:"iOS",value:"ios"},{label:"Swift",value:"swift"}],mdxType:"Tabs"},(0,r.mdx)(l.Z,{value:"ios",mdxType:"TabItem"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objc"},"#import <FlipperKitLayoutPlugin/FlipperKitLayoutPlugin.h>\n\nSKDescriptorMapper *mapper = [[SKDescriptorMapper alloc] initWithDefaults];\n[client addPlugin:[[FlipperKitLayoutPlugin alloc] initWithRootNode:context.application withDescriptorMapper:mapper]];\n"))),(0,r.mdx)(l.Z,{value:"swift",mdxType:"TabItem"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"import FlipperKit\n\nlet layoutDescriptorMapper = SKDescriptorMapper(defaults: ())\nclient?.add(FlipperKitLayoutPlugin(rootNode: application, with: layoutDescriptorMapper!))\n")))),(0,r.mdx)("h3",{id:"with-componentkit-support"},"With ComponentKit Support"),(0,r.mdx)("p",null,"If you want to enable ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/facebook/componentkit"},"ComponentKit support")," in the layout inspector, you need to add ",(0,r.mdx)("inlineCode",{parentName:"p"},"FlipperKit/FlipperKitLayoutComponentKitSupport")," to your Podfile."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-ruby"},"pod 'FlipperKit/FlipperKitLayoutComponentKitSupport', '~>' + flipperkit_version\n")),(0,r.mdx)("p",null,"Once you have added the pod you will then need to augment the descriptor with Componentkit-specific settings as shown below."),(0,r.mdx)(a.Z,{defaultValue:"ios",values:[{label:"iOS",value:"ios"},{label:"Swift",value:"swift"}],mdxType:"Tabs"},(0,r.mdx)(l.Z,{value:"ios",mdxType:"TabItem"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-objc"},"#import <FlipperKitLayoutPlugin/FlipperKitLayoutPlugin.h>\n#import <FlipperKitLayoutComponentKitSupport/FlipperKitLayoutComponentKitSupport.h>\n\nSKDescriptorMapper *layoutDescriptorMapper = [[SKDescriptorMapper alloc] initWithDefaults];\n[FlipperKitLayoutComponentKitSupport setUpWithDescriptorMapper: layoutDescriptorMapper];\n[client addPlugin: [[FlipperKitLayoutPlugin alloc] initWithRootNode: application\n                                           withDescriptorMapper: layoutDescriptorMapper]];\n"))),(0,r.mdx)(l.Z,{value:"swift",mdxType:"TabItem"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-swift"},"import FlipperKit\n\nlet layoutDescriptorMapper = SKDescriptorMapper(defaults: ())\nFlipperKitLayoutComponentKitSupport.setUpWith(layoutDescriptorMapper)\n\nclient?.add(FlipperKitLayoutPlugin(rootNode: application, with: layoutDescriptorMapper!))\n")))))}h.isMDXComponent=!0},58215:(e,t,n)=>{n.d(t,{Z:()=>o});var i=n(67294);const o=function(e){var t=e.children,n=e.hidden,o=e.className;return i.createElement("div",{role:"tabpanel",hidden:n,className:o},t)}},55064:(e,t,n)=>{n.d(t,{Z:()=>d});var i=n(83117),o=n(67294),r=n(72389),a=n(79443);const l=function(){var e=(0,o.useContext)(a.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var p=n(83039),u=n(86010);const s="tabItem_1uMI";function c(e){var t,n,i,r=e.lazy,a=e.block,c=e.defaultValue,d=e.values,m=e.groupId,h=e.className,f=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=d?d:f.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),y=(0,p.duplicates)(g,(function(e,t){return e.value===t.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===c?c:null!=(t=null!=c?c:null==(n=f.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(i=f[0])?void 0:i.props.value;if(null!==v&&!g.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=l(),w=b.tabGroupChoices,x=b.setTabGroupChoices,k=(0,o.useState)(v),D=k[0],N=k[1],O=[],T=(0,p.useScrollPositionBlocker)().blockElementScrollPositionUntilNextRender;if(null!=m){var C=w[m];null!=C&&C!==D&&g.some((function(e){return e.value===C}))&&N(C)}var M=function(e){var t=e.currentTarget,n=O.indexOf(t),i=g[n].value;i!==D&&(T(t),N(i),null!=m&&x(m,i))},P=function(e){var t,n=null;switch(e.key){case"ArrowRight":var i=O.indexOf(e.currentTarget)+1;n=O[i]||O[0];break;case"ArrowLeft":var o=O.indexOf(e.currentTarget)-1;n=O[o]||O[O.length-1]}null==(t=n)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.default)("tabs",{"tabs--block":a},h)},g.map((function(e){var t=e.value,n=e.label;return o.createElement("li",{role:"tab",tabIndex:D===t?0:-1,"aria-selected":D===t,className:(0,u.default)("tabs__item",s,{"tabs__item--active":D===t}),key:t,ref:function(e){return O.push(e)},onKeyDown:P,onFocus:M,onClick:M},null!=n?n:t)}))),r?(0,o.cloneElement)(f.filter((function(e){return e.props.value===D}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==D})}))))}function d(e){var t=(0,r.default)();return o.createElement(c,(0,i.Z)({key:String(t)},e))}},79443:(e,t,n)=>{n.d(t,{Z:()=>i});const i=(0,n(67294).createContext)(void 0)},79207:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>p,contentTitle:()=>u,metadata:()=>s,toc:()=>c,default:()=>m});var i=n(83117),o=n(80102),r=(n(67294),n(3905)),a=n(31879),l=["components"],p={id:"inspector",title:"Layout Plugin Setup",sidebar_label:"Layout",custom_edit_url:"https://github.com/facebook/flipper/blob/main/desktop/plugins/public/layout/docs/setup.mdx"},u=void 0,s={unversionedId:"setup/plugins/inspector",id:"setup/plugins/inspector",isDocsHomePage:!1,title:"Layout Plugin Setup",description:"",source:"@site/../docs/setup/plugins/inspector.mdx",sourceDirName:"setup/plugins",slug:"/setup/plugins/inspector",permalink:"/flipper/docs/setup/plugins/inspector",editUrl:"https://github.com/facebook/flipper/blob/main/desktop/plugins/public/layout/docs/setup.mdx",tags:[],version:"current",frontMatter:{id:"inspector",title:"Layout Plugin Setup",sidebar_label:"Layout",custom_edit_url:"https://github.com/facebook/flipper/blob/main/desktop/plugins/public/layout/docs/setup.mdx"},sidebar:"setup",previous:{title:"Images",permalink:"/flipper/docs/setup/plugins/fresco"},next:{title:"LeakCanary",permalink:"/flipper/docs/setup/plugins/leak-canary"}},c=[],d={toc:c};function m(e){var t=e.components,n=(0,o.Z)(e,l);return(0,r.mdx)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)(a.default,{mdxType:"Article"}))}m.isMDXComponent=!0}}]);