"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4257],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>p,MDXProvider:()=>c,mdx:()=>g,useMDXComponents:()=>u,withMDXComponents:()=>d});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(){return l=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},l.apply(this,arguments)}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),d=function(e){return function(n){var t=u(n.components);return r.createElement(e,l({},n,{components:t}))}},u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,a=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(t),c=i,f=d["".concat(a,".").concat(c)]||d[c]||m[c]||l;return t?r.createElement(f,o(o({ref:n},p),{},{components:t})):r.createElement(f,o({ref:n},p))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,a=new Array(l);a[0]=f;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var p=2;p<l;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},58215:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(67294);const i=function(e){var n=e.children,t=e.hidden,i=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:i},n)}},55064:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(83117),i=t(67294),l=t(72389),a=t(79443);const o=function(){var e=(0,i.useContext)(a.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var s=t(83039),p=t(86010);const d="tabItem_1uMI";function u(e){var n,t,r,l=e.lazy,a=e.block,u=e.defaultValue,c=e.values,m=e.groupId,f=e.className,g=i.Children.map(e.children,(function(e){if((0,i.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=c?c:g.map((function(e){var n=e.props;return{value:n.value,label:n.label}})),h=(0,s.duplicates)(v,(function(e,n){return e.value===n.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var x=null===u?u:null!=(n=null!=u?u:null==(t=g.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(r=g[0])?void 0:r.props.value;if(null!==x&&!v.some((function(e){return e.value===x})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+x+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=o(),b=y.tabGroupChoices,k=y.setTabGroupChoices,w=(0,i.useState)(x),T=w[0],O=w[1],F=[],C=(0,s.useScrollPositionBlocker)().blockElementScrollPositionUntilNextRender;if(null!=m){var N=b[m];null!=N&&N!==T&&v.some((function(e){return e.value===N}))&&O(N)}var j=function(e){var n=e.currentTarget,t=F.indexOf(n),r=v[t].value;r!==T&&(C(n),O(r),null!=m&&k(m,r))},M=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=F.indexOf(e.currentTarget)+1;t=F[r]||F[0];break;case"ArrowLeft":var i=F.indexOf(e.currentTarget)-1;t=F[i]||F[F.length-1]}null==(n=t)||n.focus()};return i.createElement("div",{className:"tabs-container"},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.default)("tabs",{"tabs--block":a},f)},v.map((function(e){var n=e.value,t=e.label;return i.createElement("li",{role:"tab",tabIndex:T===n?0:-1,"aria-selected":T===n,className:(0,p.default)("tabs__item",d,{"tabs__item--active":T===n}),key:n,ref:function(e){return F.push(e)},onKeyDown:M,onFocus:j,onClick:j},null!=t?t:n)}))),l?(0,i.cloneElement)(g.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):i.createElement("div",{className:"margin-vert--md"},g.map((function(e,n){return(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==T})}))))}function c(e){var n=(0,l.default)();return i.createElement(u,(0,r.Z)({key:String(n)},e))}},79443:(e,n,t)=>{t.d(n,{Z:()=>r});const r=(0,t(67294).createContext)(void 0)},60370:(e,n,t)=>{t.r(n),t.d(n,{frontMatter:()=>p,contentTitle:()=>d,metadata:()=>u,toc:()=>c,default:()=>y});var r=t(83117),i=t(80102),l=(t(67294),t(3905)),a=t(55064),o=t(58215),s=["components"],p={id:"testing",title:"Testing"},d=void 0,u={unversionedId:"extending/testing",id:"extending/testing",isDocsHomePage:!1,title:"Testing",description:"Developer tools are only used if they work. We have built APIs to test plugins.",source:"@site/../docs/extending/testing.mdx",sourceDirName:"extending",slug:"/extending/testing",permalink:"/docs/extending/testing",editUrl:"https://github.com/facebook/flipper/blob/main/website/../docs/extending/testing.mdx",tags:[],version:"current",frontMatter:{id:"testing",title:"Testing"},sidebar:"extending",previous:{title:"Plugin structure",permalink:"/docs/extending/desktop-plugin-structure"},next:{title:"Debugging",permalink:"/docs/extending/debugging"}},c=[{value:"Writing tests",id:"writing-tests",children:[],level:2},{value:"Desktop plugins",id:"desktop-plugins",children:[],level:2},{value:"Client plugins",id:"client-plugins",children:[],level:2},{value:"Running (Flipper) tests",id:"running-flipper-tests",children:[{value:"Flipper Desktop",id:"flipper-desktop",children:[],level:3},{value:"Flipper SDK",id:"flipper-sdk",children:[{value:"Android (Java)",id:"android-java",children:[{value:"Gradle:",id:"gradle",children:[],level:5},{value:"Gradle:",id:"gradle-1",children:[],level:5},{value:"Buck:",id:"buck",children:[],level:5}],level:4}],level:3},{value:"iOS",id:"ios",children:[],level:3},{value:"React Native",id:"react-native",children:[],level:3}],level:2}],m=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.mdx)("div",n)}},f=m("OssOnly"),g=m("FbAndroidTesting"),v=m("FbIosTesting"),h=m("FbInternalOnly"),x={toc:c};function y(e){var n=e.components,t=(0,i.Z)(e,s);return(0,l.mdx)("wrapper",(0,r.Z)({},x,t,{components:n,mdxType:"MDXLayout"}),(0,l.mdx)("p",null,"Developer tools are only used if they work. We have built APIs to test plugins."),(0,l.mdx)("h2",{id:"writing-tests"},"Writing tests"),(0,l.mdx)("h2",{id:"desktop-plugins"},"Desktop plugins"),(0,l.mdx)("p",null,"Flipper uses ",(0,l.mdx)("a",{parentName:"p",href:"https://jestjs.io/"},"Jest")," as unit testing framework."),(0,l.mdx)("p",null,"Writing unit tests for Flipper Desktop plugins is covered in detail in the ",(0,l.mdx)("a",{parentName:"p",href:"/docs/tutorial/js-custom#testing-plugin-logic"},"tutorial"),"."),(0,l.mdx)("p",null,"The ",(0,l.mdx)("inlineCode",{parentName:"p"},"flipper-plugin")," package provide several ",(0,l.mdx)("a",{parentName:"p",href:"/docs/extending/flipper-plugin#testutils"},"test utilities")," to make testing more convenient."),(0,l.mdx)("h2",{id:"client-plugins"},"Client plugins"),(0,l.mdx)(a.Z,{defaultValue:"android",values:[{label:"Android",value:"android"},{label:"iOS",value:"ios"}],mdxType:"Tabs"},(0,l.mdx)(o.Z,{value:"android",mdxType:"TabItem"},(0,l.mdx)(f,{mdxType:"OssOnly"},"Start by creating your first test file in this directory `MyFlipperPluginTest.java`. In the test method body we create our plugin which we want to test as well as a `FlipperConnectionMock`. In this contrived example we simply assert that our plugin's connected status is what we expect.",(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},"@RunWith(RobolectricTestRunner.class)\npublic class MyFlipperPluginTest {\n\n  @Test\n  public void myTest() {\n    final MyFlipperPlugin plugin = new MyFlipperPlugin();\n    final FlipperConnectionMock connection = new FlipperConnectionMock();\n\n    plugin.onConnect(connection);\n    assertThat(plugin.connected(), equalTo(true));\n  }\n}\n")),(0,l.mdx)("p",null,"There are two mock classes that are used to construct tests ",(0,l.mdx)("inlineCode",{parentName:"p"},"FlipperConnectionMock")," and ",(0,l.mdx)("inlineCode",{parentName:"p"},"FlipperResponderMock"),". Together these can be used to write very powerful tests to verify the end to end behavior of your plugin. For example we can test if for a given incoming message our plugin responds as we expect."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-java"},'@Test\npublic void myTest() {\n  final MyFlipperPlugin plugin = new MyFlipperPlugin();\n  final FlipperConnectionMock connection = new FlipperConnectionMock();\n  final FlipperResponderMock responder = new FlipperResponderMock();\n\n  plugin.onConnect(connection);\n\n  final FlipperObject params = new FlipperObject.Builder()\n      .put("phrase", "flipper")\n      .build();\n  connection.receivers.get("myMethod").onReceive(params, responder);\n\n  assertThat(responder.successes, hasItem(\n      new FlipperObject.Builder()\n          .put("phrase", "ranos")\n          .build()));\n}\n'))),(0,l.mdx)(g,{mdxType:"FbAndroidTesting"})),(0,l.mdx)(o.Z,{value:"ios",mdxType:"TabItem"},(0,l.mdx)(f,{mdxType:"OssOnly"},(0,l.mdx)("p",null,"Start by creating your first test file in this directory ",(0,l.mdx)("inlineCode",{parentName:"p"},"MyFlipperPluginTests.cpp")," and import the testing utilities from ",(0,l.mdx)("inlineCode",{parentName:"p"},"fbsource//xplat/sonar/xplat:FlipperTestLib"),". These utilities mock out core pieces of the communication channel so that you can test your plugin in isolation."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},"#include <MyFlipperPlugin/MyFlipperPlugin.h>\n#include <FlipperTestLib/FlipperConnectionMock.h>\n#include <FlipperTestLib/FlipperResponderMock.h>\n\n#include <folly/json.h>\n#include <gtest/gtest.h>\n\nnamespace facebook {\nnamespace flipper {\nnamespace test {\n\nTEST(MyFlipperPluginTests, testDummy) {\n  EXPECT_EQ(1 + 1, 2);\n}\n\n} // namespace test\n} // namespace flipper\n} // namespace facebook\n")),(0,l.mdx)("p",null,"Here is a simple test using these mock utilities to create a plugin, send some data, and assert that the result is as expected."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-objc"},'TEST(MyFlipperPluginTests, testDummy) {\n  std::vector<folly::dynamic> successfulResponses;\n  auto responder = std::make_unique<FlipperResponderMock>(&successfulResponses);\n  auto conn = std::make_shared<FlipperConnectionMock>();\n\n  MyFlipperPlugin plugin;\n  plugin.didConnect(conn);\n\n  folly::dynamic message = folly::dynamic::object("param1", "hello");\n  folly::dynamic expectedResponse = folly::dynamic::object("response", "Hi there");\n\n  auto receiver = conn->receivers_["someMethod"];\n  receiver(message, std::move(responder));\n\n  EXPECT_EQ(successfulResponses.size(), 1);\n  EXPECT_EQ(successfulResponses.back(), expectedResponse);\n}\n'))),(0,l.mdx)(v,{mdxType:"FbIosTesting"}))),(0,l.mdx)("h2",{id:"running-flipper-tests"},"Running (Flipper) tests"),(0,l.mdx)("h3",{id:"flipper-desktop"},"Flipper Desktop"),(0,l.mdx)(f,{mdxType:"OssOnly"},(0,l.mdx)("p",null,"Run ",(0,l.mdx)("inlineCode",{parentName:"p"},"yarn jest")," or ",(0,l.mdx)("inlineCode",{parentName:"p"},"yarn jest --watch")," in the ",(0,l.mdx)("inlineCode",{parentName:"p"},"desktop")," directory of your Flipper checkout.")),(0,l.mdx)(h,{mdxType:"FbInternalOnly"},(0,l.mdx)("p",null,"Run ",(0,l.mdx)("inlineCode",{parentName:"p"},"yarn jest")," or ",(0,l.mdx)("inlineCode",{parentName:"p"},"yarn jest --watch")," in ",(0,l.mdx)("inlineCode",{parentName:"p"},"~/fbsource/xplat/sonar/desktop"))),(0,l.mdx)("h3",{id:"flipper-sdk"},"Flipper SDK"),(0,l.mdx)("h4",{id:"android-java"},"Android (Java)"),(0,l.mdx)(f,{mdxType:"OssOnly"},(0,l.mdx)("h5",{id:"gradle"},"Gradle:"),(0,l.mdx)("p",null,"In the root directory of the checkout:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre"},"./gradlew android:test\n"))),(0,l.mdx)(h,{mdxType:"FbInternalOnly"},(0,l.mdx)("h5",{id:"gradle-1"},"Gradle:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre"},"cd fbsource/xplat/sonar\n./gradlew android:test\n")),(0,l.mdx)("h5",{id:"buck"},"Buck:"),(0,l.mdx)("p",null,"I don't know of a way to run them locally \ud83d\ude1e Make a change and submit a diff."),(0,l.mdx)("p",null,(0,l.mdx)("inlineCode",{parentName:"p"},"buck test ...")," should work, but doesn't seem to when run in xplat on mac but they do work on mobile on demand, if you use @mode/server."),(0,l.mdx)("p",null,(0,l.mdx)("em",{parentName:"p"},"Debugging note: They do work if you copy the files and BUCK file to")," ",(0,l.mdx)("inlineCode",{parentName:"p"},"fbandroid/javatests")," ",(0,l.mdx)("em",{parentName:"p"},"and change the rule from")," ",(0,l.mdx)("inlineCode",{parentName:"p"},"sonar_android_test")," ",(0,l.mdx)("em",{parentName:"p"},"to")," ",(0,l.mdx)("inlineCode",{parentName:"p"},"robolectric3_test"))),(0,l.mdx)(h,{mdxType:"FbInternalOnly"},(0,l.mdx)("h3",{id:"ios"},"iOS"),(0,l.mdx)("p",null,"Focus on the plugins, or flipper code you want but with the --with-tests param."),(0,l.mdx)("p",null,(0,l.mdx)("inlineCode",{parentName:"p"},"arc focus ... --with-tests")),(0,l.mdx)("p",null,"Then click the <-> icon  in xcode and you can run them there.")),(0,l.mdx)("h3",{id:"react-native"},"React Native"),(0,l.mdx)("p",null,"See ",(0,l.mdx)("a",{parentName:"p",href:"/docs/extending/testing-rn"},"testing React Native"),"."))}y.isMDXComponent=!0}}]);